 vector<int> eventualSafeNodes(int V, vector<int> adj[]) {
        // code here
        vector<int>indegree(V,0);
        vector<int>revadj[V];
        for(int i=0;i<V;i++)
        {
            for(auto it:adj[i])
            {
                revadj[it].push_back(i);
                indegree[i]++;
            }
        }
        vector<int>ans;
        queue<int>q;
        for(int i=0;i<V;i++)
        {
            if(indegree[i]==0)
            {
                q.push(i);
            }
        }
        while(!q.empty())
        {
            int f=q.front();
            ans.push_back(f);
            q.pop();
            for(auto it:revadj[f])
            {
                indegree[it]--;
                if(indegree[it]==0)
                {
                    q.push(it);                
                    
                }
            }
        }
         sort(ans.begin(),ans.end());
        return ans;
    }
